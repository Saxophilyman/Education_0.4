12.3.1. Добавьте нового пользователя в таблицу Employees.
        INSERT INTO Employees (LastName, FirstName, TitleOfCourtesy)
        VALUES('Manson', 'Ben', 'Mr.');

12.3.2. Свяжите этого нового пользователя с какой-либо территорией с помощью таблицы EmployeeTerritories (многие-ко-многим).
        INSERT INTO EmployeeTerritories (EmployeeID, TerritoryID)
        VALUES(11, '20852'); // должна быть указана существующая территория. вторым параметром значение можно прописывать как в одинарных кавычках, так и числом напрямую.


12.3.3. Попробуйте добавить новую запись в таблицу заказов Orders. Возникнут ли какие-либо конфликты?
        При запросе:
  
        INSERT INTO Orders(CustomerID, EmployeeID)
        VALUES('VIENT', 11); // VIENT - НОВОСОЗДАННОЕ ОБОЗНАЧЕНИЕ

        Выдаёт:
        Сообщение 547, уровень 16, состояние 0, строка 1
        Конфликт инструкции INSERT с ограничением FOREIGN KEY "FK_Orders_Customers". Конфликт произошел в базе данных "northwind", таблица "dbo.Customers", column 'CustomerID'.

        Возможно это происходит по причине того, что поле CustomerID является FK-ключом и не соотносится с первоначальной таблицей "Customers", где CustomerID уже является PK-ключом.
        Не знаю пока что как правильно это описать. Из серии несоответствия ссылок-значений.

        Однако, если прописать INSERT с указанием конкретно существующего значения поля CustomerID исключений происходить не будет
        INSERT INTO Orders(CustomerID, EmployeeID)
        VALUES('GREAL', 11);

        Также, если добавить нового сотрудника только со значениями NUll
        INSERT INTO Orders (EmployeeID)
        VALUES(11);

        При этом значение поля OrderID будет создаваться и увеличиваться автоматически

Рефлексия по предыдущему заданию:
В сравнении с эталоном в задании 11.5.2. не прописана сортировка ORDER BY Type.
Остальное совпадает.          
